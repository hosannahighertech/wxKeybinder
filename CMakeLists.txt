# -*- CMakeLists.txt generated by CodeLite IDE. Do not edit by hand -*-

cmake_minimum_required(VERSION 2.8.11)

project(keybinder)

# Define some variables
set(PROJECT_keybinder_PATH "${CMAKE_CURRENT_LIST_DIR}")
set(WORKSPACE_PATH "${CMAKE_CURRENT_LIST_DIR}/")



#{{{{ User Code 1
# Place your code here
#}}}}

include_directories(
    .
    include

)


# Compiler options
execute_process(COMMAND 
    wx-config --cxxflags   --unicode=yes
    OUTPUT_VARIABLE
    CL_TMP_VAR
    OUTPUT_STRIP_TRAILING_WHITESPACE)
string(STRIP "${CL_TMP_VAR}" CL_VAR_1)
add_definitions(${CL_VAR_1})
add_definitions(-g)
add_definitions(
    -DWXMAKINGDLL_KEYBINDER
    -DWXUSINGDLL
    -D__WXOSX_COCOA__
    -D__WXMAC__
    -D__WXOSX__
)


# Linker options
execute_process(COMMAND 
    wx-config --libs   std,adv,aui
    OUTPUT_VARIABLE
    CL_TMP_VAR
    OUTPUT_STRIP_TRAILING_WHITESPACE)
string(STRIP "${CL_TMP_VAR}" CL_VAR_2)
set(LINK_OPTIONS ${CL_VAR_2})
set(LINK_OPTIONS ${LINK_OPTIONS} -g)


if(WIN32)
    # Resource options
endif(WIN32)

# Library path
link_directories(
    .
)

# Define the CXX sources
set ( CXX_SRCS
    ${CMAKE_CURRENT_LIST_DIR}/src/keybinder.cpp
    ${CMAKE_CURRENT_LIST_DIR}/src/menuutils.cpp
)

set_source_files_properties(
    ${CXX_SRCS} PROPERTIES COMPILE_FLAGS 
    " -g -pthread")

if(WIN32)
    enable_language(RC)
    set(CMAKE_RC_COMPILE_OBJECT
        "<CMAKE_RC_COMPILER> ${RC_OPTIONS} -O coff -i <SOURCE> -o <OBJECT>")
endif(WIN32)



#{{{{ User Code 2
# Place your code here
#}}}}

add_library(keybinder SHARED ${RC_SRCS} ${CXX_SRCS} ${C_SRCS})
target_link_libraries(keybinder ${LINK_OPTIONS})



#{{{{ User Code 3
# Place your code here
#}}}}

